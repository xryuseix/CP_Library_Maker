	"": {
		"prefix": "",
		"body": [
			"template <int char_size, int base>",
			"class Trie {",
			"public:",
			"\tstruct Node {",
			"\t\tvector<int> next;    // 子の頂点番号を格納。存在しなければ-1",
			"\t\tvector<int> accept;  // 末端がこの頂点になる文字列(受理状態)のID",
			"\t\tint c;               // 文字，baseからの距離",
			"\t\tint common;          // いくつの文字列がこの頂点を共有しているか",
			"\t\tNode(int c_) : c(c_), common(0) { next = vector<int>(char_size, -1); }",
			"\t};",
			"\tvector<Node> nodes;  // trie 木本体",
			"\tTrie() { nodes.push_back(Node(0)); }",
			"",
			"\t/*",
			"\t単語の検索",
			"\tprefix ... 先頭のwordが一致していればいいかどうか",
			"\t*/",
			"\tbool search(const string word, const bool prefix = false) {",
			"\t\tint node_id = 0;",
			"\t\tfor (auto w : word) {",
			"\t\t\tint c = w - base;",
			"\t\t\tint next_id = nodes[node_id].next[c];",
			"\t\t\t// printf(\"%c %d %d\n\",w,c,next_id);",
			"\t\t\tif (next_id == -1) {",
			"\t\t\t\treturn false;",
			"\t\t\t}",
			"\t\t\tnode_id = next_id;",
			"\t\t}",
			"\t\treturn (prefix) ? true : nodes[node_id].accept.size();",
			"\t}",
			"",
			"\t/*",
			"\t単語の挿入",
			"\tword_id ... 何番目に追加する単語か",
			"\t*/",
			"\tvoid insert(const string &word) {",
			"\t\tint node_id = 0;",
			"\t\tfor (auto w : word) {",
			"\t\t\tint c = w - base;",
			"\t\t\tint next_id = nodes[node_id].next[c];",
			"\t\t\tif (next_id == -1) {  // 次の頂点が存在しなければ追加",
			"\t\t\t\tnext_id = nodes.size();",
			"\t\t\t\tnodes.push_back(Node(c));",
			"\t\t\t\tnodes[node_id].next[c] = next_id;",
			"\t\t\t}",
			"\t\t\t++nodes[node_id].common;",
			"\t\t\tnode_id = next_id;",
			"\t\t}",
			"\t\t++nodes[node_id].common;",
			"\t\tnodes[node_id].accept.push_back(nodes[0].common - 1); // 単語の終端なので、頂点に番号を入れておく",
			"\t}",
			"",
			"\t/*",
			"\tprefixの検索",
			"\t*/",
			"\tbool start_with(const string& prefix) { return search(prefix, true); }",
			"",
			"\t/*",
			"\t挿入した単語数",
			"\t*/",
			"\tint count() const { return nodes[0].common; }",
			"",
			"\t/*",
			"\t頂点数",
			"\t*/",
			"\tint size() const { return nodes.size(); }",
			"};"
		],
		"description": ""
	}