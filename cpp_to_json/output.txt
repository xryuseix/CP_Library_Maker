	"": {
		"prefix": "",
		"body": [
			"class Monoid {",
			"public:",
			"\t// 単位元",
			"\tint unit;",
			"\t",
			"\tMonoid() {",
			"\t\t// 単位元",
			"\t\tunit = INF;",
			"\t}",
			"",
			"\t// 演算関数",
			"\tint calc(int a, int b) {",
			"\t\treturn min(a, b); ",
			"\t}",
			"};",
			"",
			"class SegmentTree {",
			"public:",
			"\t// セグメント木の葉の要素数",
			"\tint n;",
			"",
			"\t// セグメント木",
			"\tvector<int> tree;",
			"",
			"\t// モノイド",
			"\tMonoid mono;",
			"",
			"\tSegmentTree(vector<int> &v) {",
			"\t\tn = 1 << (int)ceil(log2(v.size()));",
			"\t\ttree = vector<int>(n << 1);",
			"\t\tfor(int i = 0; i < v.size(); i++) {",
			"\t\t\tupdate(i, v[i]);",
			"\t\t}",
			"\t\tfor(int i = v.size(); i < n; i++) {",
			"\t\t\tupdate(i, mono.unit);",
			"\t\t}",
			"\t}",
			"",
			"\t// k番目の値(0-indexed)をxに変更",
			"\tvoid update(int k, int x) {",
			"\t\tk += n;",
			"\t\ttree[k] = x;",
			"\t\tfor(k = k >> 1; k > 0; k >>= 1){",
			"\t\t\ttree[k] = mono.calc(tree[k << 1 | 0], tree[k << 1 | 1]);",
			"\t\t}",
			"\t}",
			"",
			"\t// [l, r)の最小値(0-indexed)を求める．",
			"\tint query(int l, int r) {",
			"\t\tint res = mono.unit;",
			"\t\tl += n;",
			"\t\tr += n;",
			"\t\twhile(l < r) {",
			"\t\t\tif(l & 1) {",
			"\t\t\t\tres = mono.calc(res, tree[l++]);",
			"\t\t\t}",
			"\t\t\tif(r & 1) {",
			"\t\t\t\tres = mono.calc(res, tree[--r]);",
			"\t\t\t}",
			"\t\t\tl >>= 1;",
			"\t\t\tr >>= 1;",
			"\t\t}",
			"\t\treturn res;",
			"\t}",
			"",
			"\tvoid show() {",
			"\t\tint ret = 2;",
			"\t\tfor(int i = 1; i < 2*n; i++) {",
			"\t\t\tcout << tree[i] << \" \";",
			"\t\t\tif(i == ret - 1) {",
			"\t\t\t\tcout << endl;",
			"\t\t\t\tret <<= 1;",
			"\t\t\t}",
			"\t\t}",
			"\t\tcout << endl;",
			"\t}",
			"};"
		],
		"description": ""
	}