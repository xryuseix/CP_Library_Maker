	"": {
		"prefix": "",
		"body": [
			"template <typename T>",
			"class Sum {",
			"public:",
			"\t// 単位元",
			"\tT unit;",
			"",
			"\tSum(void) {",
			"\t\t// 単位元",
			"\t\tunit = 0;",
			"\t}",
			"",
			"\t// 演算関数",
			"\tT calc(T a, T b) { return a + b; }",
			"};",
			"",
			"template <typename T>",
			"struct Min {",
			"public:",
			"\t// 単位元",
			"\tT unit;",
			"",
			"\tMin(void) {",
			"\t\t// 単位元",
			"\t\tunit = INF;",
			"\t}",
			"",
			"\t// 演算関数",
			"\tT calc(T a, T b) { return min(a, b); }",
			"};",
			"",
			"template <typename T, class MONOID>",
			"class SegmentTree {",
			"public:",
			"\t// セグメント木の葉の要素数",
			"\tint n;",
			"",
			"\t// セグメント木",
			"\tvector<T> tree;",
			"",
			"\t// モノイド",
			"\tMONOID mono;",
			"",
			"\tSegmentTree(vector<T>& v)",
			"\t\t: n(1 << (int)ceil(log2(v.size()))),",
			"\t\ttree(vector<T>(n << 1, mono.unit)) {",
			"\t\tfor (int i = 0; i < v.size(); ++i) {",
			"\t\t\ttree[i + n] = v[i];",
			"\t\t}",
			"\t\tfor (int i = n - 1; i > 0; --i) {",
			"\t\t\ttree[i] = mono.calc(tree[i << 1 | 0], tree[i << 1 | 1]);",
			"\t\t}",
			"\t}",
			"",
			"\tSegmentTree(int _n)",
			"\t\t: n(1 << (int)ceil(log2(_n))), tree(vector<T>(n << 1, mono.unit)) {}",
			"",
			"\t// k番目の値(0-indexed)をxに変更",
			"\tvoid update(int k, T x) {",
			"\t\tk += n;",
			"\t\ttree[k] = x;",
			"\t\tfor (k = k >> 1; k > 0; k >>= 1) {",
			"\t\t\ttree[k] = mono.calc(tree[k << 1 | 0], tree[k << 1 | 1]);",
			"\t\t}",
			"\t}",
			"",
			"\t// k番目の値(0-indexed)をxを加算",
			"\tvoid add(int k, T x) {",
			"\t\tk += n;",
			"\t\ttree[k] += x;",
			"\t\tfor (k = k >> 1; k > 0; k >>= 1) {",
			"\t\t\ttree[k] = mono.calc(tree[k << 1 | 0], tree[k << 1 | 1]);",
			"\t\t}",
			"\t}",
			"",
			"\t// [l, r)の最小値(0-indexed)を求める．",
			"\tT query(int l, int r) {",
			"\t\tT res = mono.unit;",
			"\t\tl += n;",
			"\t\tr += n;",
			"\t\twhile (l < r) {",
			"\t\t\tif (l & 1) {",
			"\t\t\t\tres = mono.calc(res, tree[l++]);",
			"\t\t\t}",
			"\t\t\tif (r & 1) {",
			"\t\t\t\tres = mono.calc(res, tree[--r]);",
			"\t\t\t}",
			"\t\t\tl >>= 1;",
			"\t\t\tr >>= 1;",
			"\t\t}",
			"\t\treturn res;",
			"\t}",
			"",
			"\tT operator[](int k) {",
			"\t\t// st[i]で添字iの要素の値を返す",
			"\t\tif (k - n >= 0 || k < 0) {",
			"\t\t\treturn -INF;",
			"\t\t}",
			"\t\treturn tree[tree.size() - n + k];",
			"\t}",
			"",
			"\tvoid show(int elements = 31) {",
			"\t\tint ret = 2;",
			"\t\tfor (int i = 1; i < max(2 * n, elements); ++i) {",
			"\t\t\tif (tree[i] == mono.unit)",
			"\t\t\t\tcout << \"UNIT \";",
			"\t\t\telse",
			"\t\t\t\tcout << tree[i] << \" \";",
			"\t\t\tif (i == ret - 1) {",
			"\t\t\t\tcout << endl;",
			"\t\t\t\tret <<= 1;",
			"\t\t\t}",
			"\t\t}",
			"\t\tcout << endl;",
			"\t}",
			"};"
		],
		"description": ""
	}