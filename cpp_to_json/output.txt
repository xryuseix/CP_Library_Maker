	"": {
		"prefix": "",
		"body": [
			"struct mint {",
			"\tll x;",
			"\tmint(ll _x = 0) : x((_x % MOD + MOD) % MOD) {}",
			"",
			"\t/* 初期化子 */",
			"\tmint operator+() const { return mint(x); }",
			"\tmint operator-() const { return mint(-x); }",
			"",
			"\t/* 代入演算子 */",
			"\tmint& operator+=(const mint a) {",
			"\t\tif ((x += a.x) >= MOD) x -= MOD;",
			"\t\treturn *this;",
			"\t}",
			"\tmint& operator-=(const mint a) {",
			"\t\tif ((x += MOD - a.x) >= MOD) x -= MOD;",
			"\t\treturn *this;",
			"\t}",
			"\tmint& operator*=(const mint a) {",
			"\t\t(x *= a.x) %= MOD;",
			"\t\treturn *this;",
			"\t}",
			"\tmint& operator/=(const mint a) {",
			"\t\tx *= modinv(a).x;",
			"\t\tx %= MOD;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator%=(const mint a) {",
			"\t\tx %= a.x;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator++() {",
			"\t\t++x;",
			"\t\tif (x >= MOD) x -= MOD;",
			"\t\treturn *this;",
			"\t}",
			"\tmint& operator--() {",
			"\t\tif (!x) x += MOD;",
			"\t\t--x;",
			"\t\treturn *this;",
			"\t}",
			"\tmint& operator&=(const mint a) {",
			"\t\tx &= a.x;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator|=(const mint a) {",
			"\t\tx |= a.x;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator^=(const mint a) {",
			"\t\tx ^= a.x;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator<<=(const mint a) {",
			"\t\tx *= pow(2, a).x;",
			"\t\treturn (*this);",
			"\t}",
			"\tmint& operator>>=(const mint a) {",
			"\t\tx /= pow(2, a).x;",
			"\t\treturn (*this);",
			"\t}",
			"",
			"\t/* 算術演算子 */",
			"\tmint operator+(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res += a;",
			"\t}",
			"\tmint operator-(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res -= a;",
			"\t}",
			"\tmint operator*(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res *= a;",
			"\t}",
			"\tmint operator/(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res /= a;",
			"\t}",
			"\tmint operator%(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res %= a;",
			"\t}",
			"\tmint operator&(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res &= a;",
			"\t}",
			"\tmint operator|(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res |= a;",
			"\t}",
			"\tmint operator^(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res ^= a;",
			"\t}",
			"\tmint operator<<(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res <<= a;",
			"\t}",
			"\tmint operator>>(const mint a) const {",
			"\t\tmint res(*this);",
			"\t\treturn res >>= a;",
			"\t}",
			"",
			"\t/* 条件演算子 */",
			"\tbool operator==(const mint a) const noexcept { return x == a.x; }",
			"\tbool operator!=(const mint a) const noexcept { return x != a.x; }",
			"\tbool operator<(const mint a) const noexcept { return x < a.x; }",
			"\tbool operator>(const mint a) const noexcept { return x > a.x; }",
			"\tbool operator<=(const mint a) const noexcept { return x <= a.x; }",
			"\tbool operator>=(const mint a) const noexcept { return x >= a.x; }",
			"",
			"\t/* ストリーム挿入演算子 */",
			"\tfriend istream& operator>>(istream& is, mint& m) {",
			"\t\tis >> m.x;",
			"\t\tm.x = (m.x % MOD + MOD) % MOD;",
			"\t\treturn is;",
			"\t}",
			"\tfriend ostream& operator<<(ostream& os, const mint& m) {",
			"\t\tos << m.x;",
			"\t\treturn os;",
			"\t}",
			"",
			"\t/* その他の関数 */",
			"\tmint modinv(mint a) { return pow(a, MOD - 2); }",
			"\tmint pow(mint x, mint n) {",
			"\t\tmint res = 1;",
			"\t\twhile (n.x > 0) {",
			"\t\t\tif ((n % 2).x) res *= x;",
			"\t\t\tx *= x;",
			"\t\t\tn.x /= 2;",
			"\t\t}",
			"\t\treturn res;",
			"\t}",
			"};"
		],
		"description": ""
	}